{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS code which shows all fontawesome icons in a popover.\n *\n * @module     report_lmsace_reports/main\n * @copyright  2023 bdecent GmbH <https://bdecent.de>\n * @copyright  based on code from theme_boost\\footer-popover by Bas Brands.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'core/chartjs',\n    'core/str',\n    'report_lmsace_reports/widgets/sitevisits',\n    'report_lmsace_reports/widgets/siteactiveusers',\n    'report_lmsace_reports/widgets/courseblocks',\n    'report_lmsace_reports/widgets/coursevisits',\n    'report_lmsace_reports/widgets/usersinfo',\n    'report_lmsace_reports/widgets/siteinfo',\n    'report_lmsace_reports/widgets/topcourseenrolment',\n    'report_lmsace_reports/widgets/topcoursecompletion',\n    'report_lmsace_reports/widgets/courseactivity',\n    'report_lmsace_reports/widgets/enrolmethod',\n    'report_lmsace_reports/widgets/userblocks',\n    'report_lmsace_reports/widgets/usermyactivities',\n    'report_lmsace_reports/widgets/usermyquizzes',\n    'report_lmsace_reports/widgets/userassignments',\n    'report_lmsace_reports/widgets/userlogins',\n    'report_lmsace_reports/widgets/cohortsinfo',\n    'report_lmsace_reports/widgets/sitestateinfo',\n    'report_lmsace_reports/chartjs-plugin-datalabels',\n    'core/notification'\n],\n    function (\n        chartjs,\n        Str,\n        siteVistis,\n        siteactiveUsers,\n        courseBlocks,\n        courseVisits,\n        usersInfo,\n        siteInfo,\n        topcourseEnrolment,\n        topcourseCompletion,\n        courseactivity,\n        enrolmethod,\n        userBlocks,\n        userMyactivities,\n        userMyquizzes,\n        userMyassignments,\n        userLogins,\n        cohortsInfo,\n        sitestateInfo,\n        chartDataLabels,\n        Notification\n    ) {\n\n        /* global Chart */\n\n        var blocks = {\n\n            siteVistis: {\n                func: siteVistis\n            },\n            /* SiteactiveUsers : {\n                func : siteactiveUsers\n            }, */\n            courseBlocks: {\n                func: courseBlocks\n            },\n            courseVisits: {\n                func: courseVisits\n            },\n            usersInfo: {\n                func: usersInfo\n            },\n            siteInfo: {\n                func: siteInfo\n            },\n            topcourseEnrolment: {\n                func: topcourseEnrolment\n            },\n            topcourseCompletion: {\n                func: topcourseCompletion\n            },\n            courseactivity: {\n                func: courseactivity\n            },\n            enrolmethod: {\n                func: enrolmethod\n            },\n            userBlocks: {\n                func: userBlocks\n            },\n            userMyactivities: {\n                func: userMyactivities\n            },\n            userMyquizzes: {\n                func: userMyquizzes\n            },\n            userMyassignments: {\n                func: userMyassignments\n            },\n            userLogins: {\n                func: userLogins\n            },\n            cohortsInfo: {\n                func: cohortsInfo\n            },\n            sitestateInfo: {\n                func: sitestateInfo\n            }\n        };\n\n        class LMSACEReports {\n\n            getStrings() {\n                return Str.get_string('nodatatodisplay', 'report_lmsace_reports');\n            }\n\n            /**\n             * Verify the charts are have data to render the chart, if not then hide the chart\n             * and display no data available message.\n             *\n             * @param {String} str No data string\n             */\n            registerChartNoData(str) {\n\n                Chart.defaults.datasets.bar.maxBarThickness = 10;\n\n                Chart.register({\n                    id: 'nodatatodisplay',\n                    afterRender: function (chart) {\n\n                        if (chart.data.datasets[0].data.every(item => item === 0)) {\n                            const { ctx } = chart;\n                            let width = chart.width;\n                            chart.clear();\n                            ctx.save();\n                            ctx.textAlign = 'center';\n                            ctx.textBaseline = 'middle';\n                            ctx.font = `.9375rem ${window.getComputedStyle(document.body).fontFamily}`;\n                            ctx.fillText(str, width / 2, 50);\n                            ctx.restore();\n                        }\n                    },\n\n                });\n\n            }\n\n            generateRandomColor() {\n                const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n                return \"#\" + randomColor;\n            }\n\n            getRandomColorpattern(length) {\n                return Array.from({ length: length }, () => {\n                    var val = Math.floor(Math.random() * (8 - 1 + 1)) + 1;\n                    return \"c\" + val;\n                });\n            }\n\n            getRandomColors(rcolors = ['c1'], op = '', bg = false) {\n                var opacity = op ? op : '1';\n                var colors = {\n                    c1: {\n                        bo: `rgba(27, 58, 95, ${opacity})`,\n                        bg: `rgba(27, 58, 95, ${opacity})`\n                    }, // Dark blue.\n                    c2: {\n                        bo: `rgba(48, 190, 207, ${opacity})`,\n                        bg: `rgba(48, 190, 207, ${opacity})`\n                    }, // Light blue.\n                    c3: {\n                        bo: `rgba(239, 77, 97, ${opacity})`,\n                        bg: `rgba(239, 77, 97, ${opacity})`\n                    }, // Rose.\n                    c4: {\n                        bo: `rgba(251, 178, 24, ${opacity})`,\n                        bg: `rgba(251, 178, 24, ${opacity})`\n                    }, // Dark Yellow\n                    c5: {\n                        bo: `rgba(165, 165, 165, ${opacity})`,\n                        bg: `rgba(165, 165, 165, ${opacity})`\n                    }, // Gray.\n                    c6: {\n                        bo: `rgba(12, 203, 150, ${opacity})`,\n                        bg: `rgba(12, 203, 150, ${opacity})`\n                    }, // Green\n                    c7: {\n                        bo: `rgba(153, 102, 255, ${opacity})`,\n                        bg: `rgba(153, 102, 255, ${opacity})`\n                    }, // Purple\n                    c8: {\n                        bo: `rgba(57, 155, 226, ${opacity})`,\n                        bg: `rgba(57, 155, 226, ${opacity})`\n                    }, // Blue.\n                };\n\n                // Bg colors are with opacity, bo colors are withou opacity.\n                var method = bg ? 'bg' : 'bo';\n\n                var list = [];\n                rcolors.forEach((key) => {\n                    if (key in colors) {\n                        list.push(colors[key][method] ?? colors.c1);\n                    } else {\n                        list.push(this.generateRandomColor());\n                    }\n                });\n\n                return list;\n            }\n\n            buildChart(ctx, type, labels, dataValue, bgColors = null, customConfig = null, borderColor = null) {\n\n                let config = {\n                    type: type,\n                    data: {\n                        labels: labels,\n                        datasets: [{\n                            data: dataValue,\n                            backgroundColor: bgColors,\n                            borderColor: borderColor || 'white',\n                            showTooltips: false,\n                            fill: true,\n                            maxBarThickness: 80,\n                            datalabels: {\n                                anchor: 'end',\n                                align: (type == 'line' || type == 'bar') ? 'top' : 'center'\n                            }\n                        }]\n                    },\n                    options: {\n                        responsive: true,\n                        maintainAspectRatio: !(type == 'line'),\n                        layout: {\n                            padding: 20\n                        },\n                        plugins: {\n                            scales: {\n                                y: {\n                                    beginAtZero: true\n                                }\n                            },\n                            legend: {\n                                position: 'top',\n                            },\n                            title: {\n                                display: false\n                            },\n                            datalabels: {\n                                backgroundColor: function (context) {\n                                    return borderColor || context.dataset.backgroundColor;\n                                },\n                                borderColor: 'white',\n                                borderRadius: 25,\n                                borderWidth: 2,\n                                color: 'white',\n                                display: function (ctx) {\n                                    return ctx.dataset.data[ctx.dataIndex] > 0;\n                                },\n                                font: {\n                                    weight: 'bold'\n                                },\n                                padding: 6,\n                                formatter: Math.round\n                            }\n                        }\n                    },\n                    plugins: [chartDataLabels],\n                };\n\n\n                if (customConfig !== null) {\n                    config = this.merge(config, customConfig);\n                }\n                return new Chart(ctx, config);\n            }\n\n            merge(config, customConfig) {\n\n                for (let key of Object.keys(customConfig)) {\n\n                    if (!config.hasOwnProperty(key) || typeof customConfig[key] !== 'object') {\n                        config[key] = customConfig[key];\n                    } else if (typeof customConfig[key] === 'object' && typeof config[key] !== 'object') {\n                        config[key] = customConfig[key];\n                    } else if (!config[key]) {\n                        config[key] = customConfig[key];\n                    } else {\n                        this.merge(config[key], customConfig[key]);\n                    }\n                }\n                return config;\n            }\n\n            getMultiDatasetOptions() {\n                return {\n                    maintainAspectRatio: true,\n                    layout: {\n                        padding: {\n                            left: 10,\n                            right: 20,\n                        }\n                    },\n                    plugins: {\n                        datalabels: {\n                            display: 'auto',\n                            backgroundColor: function (context) {\n                                return context.dataset.borderColor;\n                            },\n                            padding: 4,\n                            borderWidth: 0,\n                        }\n                    },\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        },\n                        x: {\n                            ticks: {\n                                padding: 20\n                            }\n                        }\n                    }\n                };\n            }\n        }\n\n        return {\n            init: function () {\n                var main = new LMSACEReports();\n                main.getStrings().then((str) => {\n                    setTimeout(function () {\n                        for (let key in blocks) {\n                            blocks[key].func.init(main);\n                        }\n                        main.registerChartNoData(str);\n                    }, 1000);\n\n                    return true;\n                }).fail(Notification.exception);\n            },\n        };\n    });\n"],"names":["define","chartjs","Str","siteVistis","siteactiveUsers","courseBlocks","courseVisits","usersInfo","siteInfo","topcourseEnrolment","topcourseCompletion","courseactivity","enrolmethod","userBlocks","userMyactivities","userMyquizzes","userMyassignments","userLogins","cohortsInfo","sitestateInfo","chartDataLabels","Notification","blocks","func","LMSACEReports","getStrings","get_string","registerChartNoData","str","Chart","defaults","datasets","bar","maxBarThickness","register","id","afterRender","chart","data","every","item","ctx","width","clear","save","textAlign","textBaseline","font","window","getComputedStyle","document","body","fontFamily","fillText","restore","generateRandomColor","Math","floor","random","toString","getRandomColorpattern","length","Array","from","getRandomColors","rcolors","op","bg","opacity","colors","c1","bo","c2","c3","c4","c5","c6","c7","c8","method","list","forEach","key","push","this","buildChart","type","labels","dataValue","customConfig","borderColor","config","backgroundColor","showTooltips","fill","datalabels","anchor","align","options","responsive","maintainAspectRatio","layout","padding","plugins","scales","y","beginAtZero","legend","position","title","display","context","dataset","borderRadius","borderWidth","color","dataIndex","weight","formatter","round","merge","Object","keys","hasOwnProperty","getMultiDatasetOptions","left","right","x","ticks","init","main","then","setTimeout","fail","exception"],"mappings":"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"}