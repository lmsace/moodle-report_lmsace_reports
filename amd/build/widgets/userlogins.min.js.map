{"version":3,"file":"userlogins.min.js","sources":["../../src/widgets/userlogins.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User logins - chart init.\n *\n * @module     report_lmsace_reports/userlogins\n * @copyright  2023 LMSACE <https://lmsace.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/loadingicon', 'core/chartjs', 'report_lmsace_reports/main'],\n    function ($, AJAX, LoadIcon) {\n\n        var visitchart = null;\n        var loadiconElement = $(\".user-login-block .loadiconElement\");\n\n        /* global userlogins */\n\n        /**\n         * Inititalize the user logins report related charts and event handlers defined.\n         * @param {report_lmsace_reports/main} main\n         */\n        function init(main) {\n            if (typeof userlogins === 'undefined') {\n                return null;\n            }\n\n            var label = userlogins.label;\n            var datavalue = userlogins.value;\n            var userid = userlogins.userid;\n            showloginChart(main, label, datavalue);\n\n            $(\".user-login-block .dropdown-menu a\").click(function () {\n                var selText = $(this).text();\n                var filter = $(this).attr(\"value\");\n                $(this).parents('.dropdown').find('#daterangefiltermenu').html(selText + ' <span class=\"caret\"></span>');\n                getUserloginRecords(filter, userid);\n            });\n\n            return true;\n        }\n\n        /**\n         * Show chart\n         *\n         * @param {Array} main\n         * @param {String} label\n         * @param {Object} datavalue\n         */\n        var showloginChart = function (main, label, datavalue) {\n\n            let ctx = document.getElementById('user-login-chart');\n            if (ctx) {\n                let type = 'line';\n                var bgColor = main.getRandomColors(['c4'], '0.5', true); // Get bg color with opaticty.\n                var borderColor = main.getRandomColors(['c4']); // Get border color without opaticty.\n                var customConfig = {\n                    data: {\n                        datasets: [{\n                            label: userlogins.userlabel\n                        }]\n                    }\n                };\n\n                visitchart = main.buildChart(ctx, type, label, datavalue, bgColor, customConfig, borderColor);\n            }\n        };\n\n        var getUserloginRecords = function (filter, userid) {\n\n            if (!filter) {\n                filter = 'week';\n            }\n\n            var request = {\n                methodname: 'report_lmsace_reports_get_chart_reports',\n                args: {\n                    filter: filter,\n                    chartid: 'userloginswidget',\n                    relatedid: userid\n                }\n            };\n            var promise = AJAX.call([request])[0];\n            promise.done(function (result) {\n                updateChartData(result);\n            });\n            LoadIcon.addIconToContainerRemoveOnCompletion(loadiconElement, promise);\n        };\n\n        var updateChartData = function (data) {\n            visitchart.data.labels = data.label;\n            visitchart.data.datasets[0].data = data.value;\n            visitchart.update();\n        };\n\n        return {\n            init: init\n        };\n    });\n"],"names":["define","$","AJAX","LoadIcon","visitchart","loadiconElement","showloginChart","main","label","datavalue","ctx","document","getElementById","type","bgColor","getRandomColors","borderColor","customConfig","data","datasets","userlogins","userlabel","buildChart","getUserloginRecords","filter","userid","request","methodname","args","chartid","relatedid","promise","call","done","result","updateChartData","addIconToContainerRemoveOnCompletion","labels","value","update","init","click","selText","this","text","attr","parents","find","html"],"mappings":";;;;;;;AAuBAA,kDAAO,CAAC,SAAU,YAAa,mBAAoB,eAAgB,+BAC/D,SAAUC,EAAGC,KAAMC,cAEXC,WAAa,KACbC,gBAAkBJ,EAAE,0CAmCpBK,eAAiB,SAAUC,KAAMC,MAAOC,eAEpCC,IAAMC,SAASC,eAAe,uBAC9BF,IAAK,KACDG,KAAO,WACPC,QAAUP,KAAKQ,gBAAgB,CAAC,MAAO,OAAO,GAC9CC,YAAcT,KAAKQ,gBAAgB,CAAC,OACpCE,aAAe,CACfC,KAAM,CACFC,SAAU,CAAC,CACPX,MAAOY,WAAWC,cAK9BjB,WAAaG,KAAKe,WAAWZ,IAAKG,KAAML,MAAOC,UAAWK,QAASG,aAAcD,eAIrFO,oBAAsB,SAAUC,OAAQC,QAEnCD,SACDA,OAAS,YAGTE,QAAU,CACVC,WAAY,0CACZC,KAAM,CACFJ,OAAQA,OACRK,QAAS,mBACTC,UAAWL,SAGfM,QAAU7B,KAAK8B,KAAK,CAACN,UAAU,GACnCK,QAAQE,MAAK,SAAUC,QACnBC,gBAAgBD,WAEpB/B,SAASiC,qCAAqC/B,gBAAiB0B,UAG/DI,gBAAkB,SAAUjB,MAC5Bd,WAAWc,KAAKmB,OAASnB,KAAKV,MAC9BJ,WAAWc,KAAKC,SAAS,GAAGD,KAAOA,KAAKoB,MACxClC,WAAWmC,gBAGR,CACHC,cA1EUjC,SACgB,oBAAfa,kBACA,SAGPZ,MAAQY,WAAWZ,MACnBC,UAAYW,WAAWkB,MACvBb,OAASL,WAAWK,cACxBnB,eAAeC,KAAMC,MAAOC,WAE5BR,EAAE,sCAAsCwC,OAAM,eACtCC,QAAUzC,EAAE0C,MAAMC,OAClBpB,OAASvB,EAAE0C,MAAME,KAAK,SAC1B5C,EAAE0C,MAAMG,QAAQ,aAAaC,KAAK,wBAAwBC,KAAKN,QAAU,gCACzEnB,oBAAoBC,OAAQC,YAGzB"}